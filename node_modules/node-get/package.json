{
  "name": "node-get",
  "version": "0.1.0",
  "main": "./lib/node-get/index.js",
  "description": "A slightly higher-level HTTP client for node.",
  "keywords": [
    "http",
    "client"
  ],
  "url": "http://github.com/tmcw/node-get",
  "repositories": [
    {
      "type": "git",
      "url": "git://github.com/tmcw/node-get.git"
    }
  ],
  "author": {
    "name": "Tom MacWright",
    "email": "macwright@gmail.com"
  },
  "contributors": [],
  "licenses": [
    "BSD"
  ],
  "dependencies": {},
  "bin": {
    "node-get-file.js": "./bin/node-get-file.js"
  },
  "directories": {},
  "engines": {
    "node": ">= 0.2.4"
  },
  "readme": "# node-get\n\n`node-get` is a slightly higher-level HTTP client for nodejs.\n\n## Installation\n\n    npm install node-get\n\nnode-get has no dependencies.\n\n## Features\n\n* Redirect following.\n* Convenience functions for downloading and getting data as string.\n* Binary-extension and basic binary detection.\n\n## API\n\nDownloads are objects in `node-get`.\n\n    var dl = new get({ uri: 'http://google.com/' });\n\nThe get constructor can also take a plain string if you don't want to give options.\n\n    var dl = new get('http://google.com/');\n\nIt can also take other options.\n\n    var dl = new get({\n        uri: 'http://google.com/',\n        max_redirs: 20,\n    });\n\nThen it exposes two big methods\n\n    dl.asString(function(err, str) {\n        console.log(str);\n    });\n\nand\n\n    dl.toDisk('myfile.txt', function(err) {\n        console.log(err);\n    });\n\nThere's also a lower-level API.\n\n    dl.perform(function(err, response, encoding) {\n        // response is just a response object, just like\n        // HTTP request, except handling redirects\n    });\n\n## Example\n\n    var get = require('node-get');\n\n    var download = new get('http://google.com/');\n    download.asString(console.log);\n\n## Binary\n\nnode-get includes a binary, `node-get-file.js`, which downloads \nfiles either to the filesystem or to stdout.\n\n## Changelog\n\n### 0.1.0\n\n* The API changes in 0.1.x - Get should never be expected to throw an exception.\n* Handling of invalid URLs on redirect.\n* Handling of file-level errors.\n\n### 0.0.3\n\n* Handling of DNS-level exceptions.\n\n### 0.0.2\n\n* Enhanced URL validation.\n\n## TODO:\n\n* Retries\n* Tested HTTPS\n* Guessing encoding wth headers\n* User-customizable encodings\n* Configurable headers\n\n## Authors\n\n* Tom MacWright (tmcw)\n",
  "readmeFilename": "README.md",
  "_id": "node-get@0.1.0",
  "_from": "node-get@~0.1.0"
}
